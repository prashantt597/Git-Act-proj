name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

env:
  REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  BACKEND_IMAGE: docker.io/prashantt597/backend
  FRONTEND_IMAGE: docker.io/prashantt597/frontend
  SONAR_PROJECT_KEY: prashantt597_Project
  SONAR_ORGANIZATION: prashantt597
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          docker build -t $BACKEND_IMAGE:latest ./backend
          docker push $BACKEND_IMAGE:latest

      - name: Trivy Scan - Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.BACKEND_IMAGE }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build and Push Frontend Image
        run: |
          docker build -t $FRONTEND_IMAGE:latest ./frontend
          docker push $FRONTEND_IMAGE:latest

      - name: Trivy Scan - Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.FRONTEND_IMAGE }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

  sonar:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORGANIZATION }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, sonar]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/mysql.yaml
          kubectl apply -f k8s/backend.yaml
          kubectl apply -f k8s/frontend.yaml
          kubectl apply -f k8s/ingress.yaml
